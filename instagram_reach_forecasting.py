# -*- coding: utf-8 -*-
"""INSTAGRAM REACH FORECASTING.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/122MQTEa47jf-5KAy1BEtVOfN-tEqHcQd
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.seasonal import seasonal_decompose

from google.colab import files
up = files.upload()

df = pd.read_csv('Instagram-Reach.csv')
df.head()

df.dtypes

df = pd.read_csv('Instagram-Reach.csv',parse_dates=['Date'],index_col='Date')

df.head(5)

df.loc['2022-04-04']

from pylab import rcParams #increase the fig size
rcParams['figure.figsize']=10,6
df.plot()
plt.ylabel('Insta Reach',size=16,color='red')
plt.xlabel('Date',size=16,color='red')
plt.show()

#decomposing time series multiplicatively
df_mul_decom = seasonal_decompose(df,model = "multiplicative")
df_mul_decom.plot()
plt.show()

#log transformation
df_log = df.copy()

df_log['Instagram_reach'] = np.log(df)

df_log.Instagram_reach

#plot log series
df_log.plot()
plt.show()

#train test split
train = df.loc[df.index < '12-01-2022']
test = df.loc[df.index >= '12-01-2022']

fig, ax = plt.subplots(figsize=(15,5))
train.plot(ax=ax, label='Training set')
test.plot(ax=ax, label='testing set')

#feature selection
def create_feature(df):
  df['dayofweek'] = df.index.dayofweek
  df['quarter'] = df.index.quarter
  df['month'] = df.index.month
  df['dayofyear'] = df.index.dayofyear
  return df

df = create_feature(df)
print(df)

import xgboost as xgb
from sklearn.metrics import mean_squared_error

train = create_feature(train)
test = create_feature(test)

df.columns

features = ['dayofweek', 'quarter', 'month','dayofyear']
target = ['Instagram reach']

x_train = train[features]
y_train = train[target]

x_test = test[features]
y_test = test[target]

reg = xgb.XGBRegressor(n_estimators = 1000, early_stopping_rounds = 50)
reg.fit(x_train,y_train,
        eval_set = [(x_train, y_train),(x_test, y_test)],
        verbose = 100)

pd.DataFrame(reg.feature_importances_,
             index=reg.feature_names_in_,
             columns=['importance'])

#pip install fi

reg.predict(x_test) #predicted Values..

test['prediction'] = reg.predict(x_test)

df = df.merge(test[['prediction']], how='left',left_index = True, right_index = True)
df

ax = df[['Instagram reach']].plot(figsize=(15,5))
df['prediction'].plot(ax=ax , style='.')
ax.set_title("OG data and Prediction")
plt.show()

ax = df.loc[(df.index > '12-01-2022') & (df.index < '12-08-2022')]['Instagram reach'].plot(figsize = (15,5), title='Week of Data')
df.loc[(df.index > '12-01-2022') & (df.index < '12-08-2022')]['prediction'].plot(style='.')
plt.show()

